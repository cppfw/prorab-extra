name: ci
on: [push, pull_request]
env:
  PACKAGE_NAME: ${{ github.event.repository.name }}
  MYCI_BINTRAY_USERNAME: igagis
  MYCI_BINTRAY_API_KEY: ${{ secrets.MYCI_BINTRAY_API_KEY }}
  MYCI_GIT_USERNAME: igagis
  MYCI_GIT_PASSWORD: ${{ secrets.MYCI_GIT_ACCESS_TOKEN }}
jobs:
##### linux #####
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: debian, codename: stretch, image_owner: , package_type: deb}
          - {os: debian, codename: buster, image_owner: , package_type: deb}
          - {os: ubuntu, codename: bionic, image_owner: , package_type: deb}
          - {os: ubuntu, codename: eoan, image_owner: , package_type: deb}
          # - {os: raspbian, codename: stretch, image_owner: igagis/, package_type: deb}
          # - {os: raspbian, codename: buster, image_owner: igagis/, package_type: deb}
    container: ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.codename }}
    name: linux - ${{ matrix.os }}:${{ matrix.codename }}
    steps:
      - name: git clone
        uses: actions/checkout@main
      - name: add cppfw deb repo
        uses: myci-actions/add-deb-repo@master
        with:
          repo: deb http://dl.bintray.com/cppfw/${{ matrix.os }} ${{ matrix.codename }} main
          repo-name: cppfw
          keys: 379CE192D401AB61
      - name: install ci tools
        run: |
          apt update
          apt install --assume-yes devscripts equivs myci
      - name: prepare debian package
        run: myci-deb-prepare.sh
      - name: install deps
        run: myci-deb-install-build-deps.sh
      - name: build
        run: autojobs=true dpkg-buildpackage --unsigned-source --unsigned-changes
      - name: deploy deb packages
        run: myci-deploy-debian-bintray.sh --owner cppfw --repo ${{ matrix.os }} --distro ${{ matrix.codename }} --component main --package $PACKAGE_NAME ../*.deb
        if: matrix.package_type == 'deb' && startsWith(github.ref, 'refs/tags/')
##### macosx #####
  macosx:
    runs-on: macos-latest
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: add cppfw tap
      run: |
        brew tap cppfw/tap
        brew update
    - name: install ci tools
      run: brew install myci
    - name: build
      run: make autojobs=true
    - name: test
      run: make test
    - name: deploy
      run: myci-deploy-homebrew.sh --tap cppfw/tap
      if: startsWith(github.ref, 'refs/tags/')
##### msys2 #####
  msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: make msys2 to provide the default shell
      uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: MSYS
        install: >-
          msys2-devel
          make
    - name: git clone
      uses: actions/checkout@main
    - name: add cppfw pacman msys repo
      uses: myci-actions/add-pacman-repo@master
      with: {name: cppfw_msys, url: 'https://dl.bintray.com/cppfw/msys2/msys', shell: 'msys2 {0}'}
    - name: install ci tools
      run: pacman -Sy --noconfirm myci
    - name: prepare pacman package
      run: myci-apply-version.sh -v $(myci-deb-version.sh debian/changelog) msys2/PKGBUILD.in
    - name: build
      run: |
        cd msys2
        makepkg --syncdeps --noconfirm --skipinteg
    - name: deploy
      run: myci-deploy-pacman-bintray.sh --owner cppfw --repo msys2 --path msys --database cppfw_msys msys2/$PACKAGE_NAME-*-any.pkg.*
      if: startsWith(github.ref, 'refs/tags/')
